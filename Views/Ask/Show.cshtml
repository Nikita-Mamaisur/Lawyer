@model Lawyer.Models.AskModel
@{
	ViewBag.Title = Model.Title;
}

<div class="container">
	<h4 class="text-center"> @Model.Title </h4>
	<p class="text-justify">
		@Html.Raw(Model.Body)
	</p>
	@if (User.Identity.IsAuthenticated)
	{
		<div>
			<form class="form-group" action="/ask/addanswer" method="post">
				@Html.AntiForgeryToken()
				<textarea class="form-control" name="text" cols="50" rows="2" placeholder="Дать ответ"></textarea>
				<input type="hidden" name="askId" value="@Model.Id" />
				<input type="hidden" name="returnUrl" value="@Request.Url.AbsoluteUri" />
				<input class="btn btn-dark my-2" type="submit" value="Написать" />


			</form>
		</div>
	}
	<div>
		@foreach (var comment in Model.Answers)
		{
			<div class="border my-2 p-2">
				<div>
					@comment.Text
				</div>
				<div class="text-right text-info">
					@comment.Date.ToLongDateString() - @comment.Date.AddHours(3).ToLongTimeString()
				</div>
			</div>
		}
	</div>
</div>



@using (Html.BeginForm("EditButton", "Ask", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Ask</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Slug)

		<div class="form-group">
			@Html.LabelFor(model => model.IsAnswered, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="checkbox">
					@Html.EditorFor(model => model.IsAnswered)
					@Html.ValidationMessageFor(model => model.IsAnswered, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-dark my-2" />
			</div>
		</div>
	</div>
}
